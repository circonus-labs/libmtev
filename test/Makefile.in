.NOTPARALLEL:

Q=
ifeq ($(V),)
	Q=@
endif

CC=@CC@
CPPFLAGS=@CPPFLAGS@
CFLAGS=@CFLAGS@
LDFLAGS=@LDFLAGS@
AR=@AR@
RANLIB=@RANLIB@
LIBS=@LIBS@
PGLIBS=@PGLIBS@
INSTALL=@INSTALL@
LIBMTEV_LIBS=@LIBMTEV_LIBS@
UNWINDLIB=@UNWINDLIB@

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
sbindir=@sbindir@
libdir=@libdir@
includedir=@includedir@
libexecdir=@libexecdir@
datarootdir = @datarootdir@
mandir=@mandir@
mansubdir=@mansubdir@
docdir=${prefix}/@docdir@
sysconfdir=@sysconfdir@
srcdir=@srcdir@
top_srcdir=@top_srcdir@

LD_LIBRARY_PATH=../src
TESTHARNESS_OBJS=test_harness.o

all:	check

TESTS=hash_test uuid_test time_test

hash_test: hash_test.c
	$(Q)$(CC) -I../src/utils $(CPPFLAGS) $(CFLAGS) -L../src $(LDFLAGS) -lmtev $(LIBMTEV_LIBS) -o hash_test hash_test.c

uuid_test: uuid_test.c
	$(Q)$(CC) -I../src/utils $(CPPFLAGS) $(CFLAGS) -L../src $(LDFLAGS) -lmtev $(LIBMTEV_LIBS) -o uuid_test uuid_test.c

time_test: time_test.c
	$(Q)$(CC) -I../src/utils $(CPPFLAGS) $(CFLAGS) -L../src $(LDFLAGS) -lmtev $(LIBMTEV_LIBS) -o time_test time_test.c

.c.o:
	@echo "- compiling $<"
	$(Q)$(CC) $(CPPFLAGS) $(CFLAGS) -c $<

test_harness:       $(TESTHARNESS_OBJS)
	@echo "- linking $@"
	$(Q)$(CC) -L.. $(LDFLAGS) $(UNWINDLIB) -o $@ $(TESTHARNESS_OBJS) $(LIBS) -lmtev

busted:
	@busted --version >/dev/null 2>/dev/null || \
		(echo "Please instead busted: luarocks install busted" && false)

check:	test_harness $(TESTS)
	@echo
	@echo "Running luajit-based tests via test_harness..."
	$(Q)_DYLD_LIBRARY_PATH=$(LD_LIBRARY_PATH) DYLD_LIBRARY_PATH=$(LD_LIBRARY_PATH) LD_LIBRARY_PATH=$(LD_LIBRARY_PATH) ./test_harness -c ./test_harness.conf
	@echo
	@echo "Running other tests via script..."
	$(Q)_DYLD_LIBRARY_PATH=$(LD_LIBRARY_PATH) DYLD_LIBRARY_PATH=$(LD_LIBRARY_PATH) LD_LIBRARY_PATH=$(LD_LIBRARY_PATH) ./run_standalone_tests.sh $(TESTS)

tap:	busted
	_DYLD_LIBRARY_PATH=../src DYLD_LIBRARY_PATH=../src LD_LIBRARY_PATH=../src busted --helper=mtev_load.lua -o tap .

clean:
	rm -f $(TESTS)
