.SUFFIXES: .lo .@MODULEEXT@ .xml .xmlh .so

Q=
ifeq ($(V),)
	Q=@
endif

prefix=@prefix@
exec_prefix=@exec_prefix@
libdir=@libdir@
includedir=@includedir@
top_srcdir=@top_srcdir@

CC=@CC@
LD=@LD@
CPPFLAGS=-I$(top_srcdir)/src -I$(top_srcdir)/src/utils -I$(top_srcdir)/src/json-lib @CPPFLAGS@ -DHIDE_EVENTER_ABI
CFLAGS=@CFLAGS@ @CFLAGSEXTRAS@
DEPFLAGS=@DEPFLAGS@
SHCFLAGS=@SHCFLAGS@ @CFLAGSEXTRAS@
MODULELD=@MODULELD@
MODULEEXT=@MODULEEXT@
LDFLAGS=@LDFLAGS@
SHLDFLAGS=@SHLDFLAGS@
AR=@AR@
RANLIB=@RANLIB@
LIBS=@LIBS@
MODLIBS=
INSTALL=@INSTALL@
MODULES_DIR=@MODULES_DIR@
XSLTPROC=@XSLTPROC@
XMLLINT=@XMLLINT@
XML2H=@PERL@ @top_srcdir@/buildtools/xml2h
LUALIBS=@LUALIBS@
CTFCONVERT=@CTFCONVERT@
CTFMERGE=@CTFMERGE@

# Later versions of ctfconvert no longer have -g and by default do not strip,
# so we get the same behavior as with -g on older versions.
ifneq ($(wildcard $(CTFCONVERT)),)
  HAS_G=$(shell $(CTFCONVERT) 2>&1 | grep -- -gis)
  ifneq ($(HAS_G),)
    CTFNOSTRIP=-g
  else
    CTFNOSTRIP=
  endif
endif

define ctfmerge
	$(Q)if test -x "$(CTFMERGE)" ; then \
		echo "- merging CTF ($@)" ; \
		$(CTFMERGE) -l @VERSION@ -o $@ $^ ; \
	fi
endef

define modulelink
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ $^ $(MODLIBS)
	$(ctfmerge)
endef

HEADERS=lua_mtev.h
LUA_FILES=mtev/extras.lua mtev/timeval.lua mtev/HttpClient.lua \
	mtev/hooks/http.lua

FQ_MODULES=@FQ_MODULES@
AMQP_MODULES=@AMQP_MODULES@
LUA_MODULES=@LUA_MODULES@
MTEV4LUA=@MTEV4LUA@

MODULES=$(FQ_MODULES) $(AMQP_MODULES) $(LUA_MODULES) zipkin_jaeger.@MODULEEXT@

all:	$(MODULES) $(MTEV4LUA)

.xml.xmlh:
	$(Q)$(XML2H) `echo $< | sed -e 's/\.xml$$//;'`_xml_description < $< > $@

zipkin_jaeger.lo:	zipkin_jaeger.xmlh

zipkin_jaeger.@MODULEEXT@:	MODLIBS += -lcurl

zipkin_fq.lo:	zipkin_fq.xmlh

zipkin_fq.@MODULEEXT@:	MODLIBS += -lfq

mtev_fq.lo:	fq.xmlh

fq.@MODULEEXT@:	MODLIBS += -lfq
fq.@MODULEEXT@:	mtev_fq.lo
	$(modulelink)

mtev_amqp.lo:	amqp.xmlh

amqp.@MODULEEXT@:	MODLIBS += -lrabbitmq
amqp.@MODULEEXT@:	mtev_amqp.lo
	$(modulelink)

LUA_MODULE_OBJS=lua.lo lua_web.lo lua_general.lo lua_mtev_http.lo

lua_general.lo:	lua_general.xmlh
lua_web.lo:	lua_web.xmlh

lua_mtev.@MODULEEXT@:	MODLIBS = $(LUALIBS)
lua_mtev.@MODULEEXT@:	$(LUA_MODULE_OBJS)
	$(modulelink)

# luajit always uses .so
MTEV_LUA_OBJS=lua_mtev_crypto.lo lua_mtev.lo lua_mtev_dns.lo \
	lua_lpack.lo lua_bit.lo lua_mtev_stats.lo

mtev_lua/mtev.@MODULEEXT@:	MODLIBS += -lcrypto -ludns
mtev_lua/mtev.@MODULEEXT@:	$(MTEV_LUA_OBJS)
	$(Q)mkdir -p mtev_lua
	$(modulelink)
	$(Q)if test "@MODULEEXT@" != "so" ; then \
		mv mtev_lua/mtev.@MODULEEXT@ mtev_lua/mtev.so ; \
	fi

.lo.@MODULEEXT@:
	$(modulelink)

.c.lo:
	@echo "- compiling $<"
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) -c $< -o $@.noctf
	$(Q)if test -x "$(CTFCONVERT)" ; then \
		echo "- making CTF ($@)" ; \
		$(CTFCONVERT) $(CTFNOSTRIP) -i -l @VERSION@ $@.noctf ; \
	fi
	$(Q)mv $@.noctf $@

alldocs:
	for c in *.xml ; do \
		$(XSLTPROC) module-md.xsl $$c > $(top_srcdir)/docs-md/config/modules/`echo $$c | sed -e 's/.xml$$/.md/;'` ; \
	done

install:	install-modules install-headers

install-headers:
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(includedir)
	for h in $(HEADERS); do \
		$(INSTALL) -m 0444 $$h $(DESTDIR)$(includedir)/$$h ; \
	done

install-modules:	$(MODULES)
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(MODULES_DIR)
	for mod in $(MODULES); do \
		$(INSTALL) -m 0755 $$mod $(DESTDIR)$(MODULES_DIR)/$$mod ; \
	done
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(libdir)/mtev_lua
	if [ "x$(MTEV4LUA)" != "x" ]; then \
		$(INSTALL) -m 0755 $(MTEV4LUA) $(DESTDIR)$(libdir)/$(MTEV4LUA); \
	fi
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(MODULES_DIR)/lua/mtev
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(MODULES_DIR)/lua/mtev/hooks
	for lua in $(LUA_FILES); do \
		$(INSTALL) -m 0755 lua-support/$$lua $(DESTDIR)$(MODULES_DIR)/lua/$$lua ; \
	done

install-fq:	$(FQ_MODULES)
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(MODULES_DIR)
	for mod in $(FQ_MODULES); do \
		$(INSTALL) -m 0755 $$mod $(DESTDIR)$(MODULES_DIR)/$$mod ; \
	done

install-amqp:	$(AMQP_MODULES)
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(MODULES_DIR)
	for mod in $(AMQP_MODULES); do \
		$(INSTALL) -m 0755 $$mod $(DESTDIR)$(MODULES_DIR)/$$mod ; \
	done

clean:
	rm -f *.lo *.so *.@MODULEEXT@ *.xmlh $(RABBITMQ_DRIVER_OBJS) $(LUA_MODULES) $(MTEV4LUA)

distclean:	clean
	rm -f Makefile

Makefile.dep:
	$(CC) -I.. $(CPPFLAGS) $(CFLAGS) \
		$(DEPFLAGS) -c *.c | sed -e 's/\.o:/\.lo:/' > Makefile.dep
	$(top_srcdir)/buildtools/culldeps.sh Makefile.dep

include Makefile.dep
