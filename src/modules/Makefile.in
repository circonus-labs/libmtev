.SUFFIXES: .lo .@MODULEEXT@ .xml .xmlh

Q=
ifeq ($(V),)
	Q=@
endif

prefix=@prefix@
exec_prefix=@exec_prefix@
libdir=@libdir@
includedir=@includedir@
top_srcdir=@top_srcdir@

CC=@CC@
LD=@LD@
CPPFLAGS=-I$(top_srcdir)/src -I$(top_srcdir)/src/utils -I$(top_srcdir)/src/json-lib @CPPFLAGS@
CFLAGS=@CFLAGS@ @CFLAGSEXTRAS@
DEPFLAGS=@DEPFLAGS@
SHCFLAGS=@SHCFLAGS@ @CFLAGSEXTRAS@
MODULELD=@MODULELD@
MODULEEXT=@MODULEEXT@
LDFLAGS=@LDFLAGS@
SHLDFLAGS=@SHLDFLAGS@
AR=@AR@
RANLIB=@RANLIB@
LIBS=@LIBS@
INSTALL=@INSTALL@
MODULES_DIR=@MODULES_DIR@
XSLTPROC=@XSLTPROC@
XMLLINT=@XMLLINT@
XML2H=@top_srcdir@/buildtools/xml2h
LUADIR=LuaJIT
LUALIBS=@LUALIBS@

top_srcdir=@top_srcdir@

MODULES=@FQ_MODULES@ @LUA4MTEV@
MTEV4LUA=mtev_lua/mtev.so
HEADERS=lua_mtev.h
LUA_FILES=mtev/extras.lua mtev/timeval.lua mtev/HttpClient.lua

FQ_MODULES=@FQ_MODULES@

all:	$(MODULES) $(MTEV4LUA)

.xml.xmlh:
	$(Q)$(XML2H) `echo $< | sed -e 's/\.xml$$//;'`_xml_description < $< > $@

zipkin_fq.lo:	zipkin_fq.xmlh

zipkin_fq.@MODULEEXT@:	zipkin_fq.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ zipkin_fq.lo -lfq
	@echo "- linking $@"

mtev_fq.lo:	fq.xmlh

fq.@MODULEEXT@:	mtev_fq.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ mtev_fq.lo -lfq
	@echo "- linking $@"

LUA_MODULE_OBJS=lua.lo lua_web.lo lua_general.lo lua_mtev_http.lo

lua_general.lo:	lua_general.xmlh
lua_web.lo:	lua_web.xmlh

lua_mtev.@MODULEEXT@:	$(LUA_MODULE_OBJS)
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ $(LUA_MODULE_OBJS) $(LUALIBS)
	@echo "- linking $@"

# luajit always uses .so
MTEV_LUA_OBJS=lua_mtev_crypto.lo lua_mtev.lo lua_mtev_dns.lo \
	lua_lpack.lo lua_bit.lo

mtev_lua/mtev.so:	$(MTEV_LUA_OBJS)
	$(Q)mkdir -p mtev_lua
	$(Q)$(MODULELD) $(SHLDFLAGS) -o mtev_lua/mtev.@MODULEEXT@ $(MTEV_LUA_OBJS) -lcrypto -ludns
	@if [ "mtev_lua/mtev.so" != "mtev_lua/mtev.@MODULEEXT@" ]; then \
		rm -f mtev_lua/mtev.so; \
		mv mtev_lua/mtev.@MODULEEXT@ mtev_lua/mtev.so; \
	fi
	@echo "- linking $@"

.lo.@MODULEEXT@:
	@(Q)$(MODULELD) $(SHLDFLAGS) -o $@ $<
	@echo "- linking $@"

.c.lo:
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) -c $< -o $@
	@echo "- compiling $<"

alldocs:
	for c in *.xml ; do \
		$(XSLTPROC) module.xsl $$c | $(XMLLINT) --format - | sed -e 's/ xmlns=""//g;' > $(top_srcdir)/docs/config/modules/$$c ; \
	done

install:	install-modules install-headers

install-headers:
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(includedir)
	for h in $(HEADERS); do \
		$(INSTALL) -m 0444 $$h $(DESTDIR)$(includedir)/$$h ; \
	done

install-modules:	$(MODULES)
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(MODULES_DIR)
	for mod in $(MODULES); do \
		$(INSTALL) -m 0755 $$mod $(DESTDIR)$(MODULES_DIR)/$$mod ; \
	done
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(libdir)/mtev_lua
	$(INSTALL) -m 0755 mtev_lua/mtev.so $(DESTDIR)$(libdir)/mtev_lua/mtev.so
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(MODULES_DIR)/lua/mtev
	for lua in $(LUA_FILES); do \
		$(INSTALL) -m 0755 lua-support/$$lua $(DESTDIR)$(MODULES_DIR)/lua/$$lua ; \
	done

install-fq:	$(FQ_MODULES)
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(MODULES_DIR)
	for mod in $(FQ_MODULES); do \
		$(INSTALL) -m 0755 $$mod $(DESTDIR)$(MODULES_DIR)/$$mod ; \
	done

clean:
	rm -f *.lo *.so *.@MODULEEXT@ *.xmlh $(RABBITMQ_DRIVER_OBJS)

distclean:	clean
	rm -f Makefile

Makefile.dep:
	$(CC) -I.. $(CPPFLAGS) $(CFLAGS) \
		$(DEPFLAGS) -c *.c | sed -e 's/\.o:/\.lo:/' > Makefile.dep
	$(top_srcdir)/buildtools/culldeps.sh Makefile.dep

include Makefile.dep
