.SUFFIXES:	.lo

Q=
ifeq ($(V),)
	Q=@
endif

top_srcdir=@top_srcdir@

CC=@CC@
CPPFLAGS=-I$(top_srcdir)/src \
	-I$(top_srcdir)/src/json-lib -I$(top_srcdir)/src/utils -I$(top_srcdir)/src/modules \
	@CPPFLAGS@
CFLAGS=@CFLAGS@ @CFLAGSEXTRAS@
SHCFLAGS=@SHCFLAGS@ @CFLAGSEXTRAS@
LDFLAGS=@LDFLAGS@
DEPFLAGS=@DEPFLAGS@
AR=@AR@
RANLIB=@RANLIB@
LIBS=@EXAMPLE_LIBS@
INSTALL=@INSTALL@

ES_OBJS=	echo_server.o

EC_OBJS=	echo_client.o

EX1_OBJS=	example1.o

ACO_OBJS=	aco.o

FQR_OBJS=	fq-router.o

KAFKA_CONSUMER_OBJS= kafka_consumer.o

KAFKA_PRODUCER_OBJS= kafka_producer.o

WSC_OBJS=	websocket_client.o

WSS_OBJS=	websocket_server.o

EXTRA_TARGETS=@EXTRA_EXAMPLES@

all:	testcerts echo_server echo_client example1 aco $(EXTRA_TARGETS)

.c.o:
	@echo "- compiling $<"
	$(Q)$(CC) $(CPPFLAGS) $(CFLAGS) -c $<

echo_server:	$(ES_OBJS)
	@echo "- linking $@"
	$(Q)$(CC) -L.. $(LDFLAGS) @UNWINDLIB@ -o $@ $(ES_OBJS) $(LIBS) -lmtev

echo_client:	$(EC_OBJS)
	@echo "- linking $@"
	$(Q)$(CC) -L.. $(LDFLAGS) @UNWINDLIB@ -o $@ $(EC_OBJS) $(LIBS) -lmtev -lcurl

example1:	$(EX1_OBJS)
	@echo "- linking $@"
	$(Q)$(CC) -L.. $(LDFLAGS) @UNWINDLIB@ -o $@ $(EX1_OBJS) $(LIBS) -lmtev

aco:	$(ACO_OBJS)
	@echo "- linking $@"
	$(Q)$(CC) -L.. $(LDFLAGS) @UNWINDLIB@ -o $@ $(ACO_OBJS) $(LIBS) -lmtev -lcurl

fq-router:	$(FQR_OBJS)
	@echo "- linking $@"
	$(Q)$(CC) -L.. $(LDFLAGS) @UNWINDLIB@ -o $@ $(FQR_OBJS) $(LIBS) -lmtev -lfq

kafka_producer:	$(KAFKA_PRODUCER_OBJS)
	@echo "- linking $@"
	$(Q)$(CC) -L.. $(LDFLAGS) @UNWINDLIB@ -o $@ $(KAFKA_PRODUCER_OBJS) $(LIBS) -lmtev -lrdkafka

kafka_consumer:	$(KAFKA_CONSUMER_OBJS)
	@echo "- linking $@"
	$(Q)$(CC) -L.. $(LDFLAGS) @UNWINDLIB@ -o $@ $(KAFKA_CONSUMER_OBJS) $(LIBS) -lmtev -lrdkafka

websocket_client:	$(WSC_OBJS)
	@echo "- linking $@"
	@$(CC) -L.. $(LDFLAGS) $(LIBS) @UNWINDLIB@ -o $@ $(WSC_OBJS) -lmtev

websocket_server:	$(WSS_OBJS)
	@echo "- linking $@"
	$(Q)$(CC) -L.. $(LDFLAGS) @UNWINDLIB@ -o $@ $(WSS_OBJS) $(LIBS) -lmtev

.PHONY:	demoCA-dir
demoCA-dir:
	@mkdir -p demoCA
	@touch demoCA/index.txt
	@test -f demoCA/serial || echo 00 > demoCA/serial

testcerts:	demoCA-dir test-ca.crt test-server.crt

test-ca.key:
	openssl genrsa -out test-ca.key 4096

test-ca.csr:    test-ca.key
	openssl req -sha256 -key test-ca.key -days 365 -new -out test-ca.csr -config demo-openssl.cnf -extensions v3_ca -subj "/C=US/ST=Maryland/O=Circonus Labs/CN=Sample CA"

test-ca.crt:    test-ca.key test-ca.csr
	openssl x509 -sha256 -req -in test-ca.csr -signkey test-ca.key -out test-ca.crt -extfile demo-openssl.cnf -extensions v3_ca -days 365

test-server.key:
	openssl genrsa -out test-server.key 2048

test-server.csr:  test-server.key
	openssl req -sha256 -key test-server.key -days 365 -new -out test-server.csr -config demo-openssl.cnf -subj "/C=US/ST=Maryland/O=Circonus Labs/CN=test-server"

test-server.crt:  test-server.csr test-ca.key test-ca.crt
	openssl ca -batch -config demo-openssl.cnf -in test-server.csr -out test-server.crt -outdir . -keyfile test-ca.key -cert test-ca.crt -days 120

clean:
	rm -f *.o example1 websocket_server websocket_client fq-router kafka_consumer kafka_producer echo_server echo_client aco
	rm -rf demoCA
	rm -f *.key *.crt *.csr *.pem

distclean:	clean
	rm -f Makefile
